func TestGetData(t *testing.T) {
	setupTestDB()
	defer teardownTestDB()

	// Insert test data
	dbResult, _ := metaDB.Exec("INSERT INTO databases (name, description, workspace_id) VALUES (?, ?, ?)", "TestDB", "Test database", 1)
	databaseID, _ := dbResult.LastInsertId()
	metaDB.Exec("INSERT INTO tables (name, database_id) VALUES (?, ?)", "TestTable", databaseID)

	router := mux.NewRouter()
	router.HandleFunc("/data", getData).Methods("GET")

	req, _ := http.NewRequest("GET", fmt.Sprintf("/data?database_id=%d&query=SELECT * FROM TestTable", databaseID), nil)
	rr := httptest.NewRecorder()

	router.ServeHTTP(rr, req)

	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v", status, http.StatusOK)
	}

	var response []map[string]interface{}
	json.Unmarshal(rr.Body.Bytes(), &response)

	// The response should be an empty array since we haven't inserted any data
	if len(response) != 0 {
		t.Errorf("handler returned unexpected number of results: got %v want %v", len(response), 0)
	}
}
